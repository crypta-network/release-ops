name: Build cryptad snap (amd64/arm64)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version number (e.g. 1.2.3). If set, checks out release/<version>"
        required: false
        default: ""
      branch:
        description: "Branch or tag to build when version is empty"
        required: false
        default: "main"

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: ubuntu-24.04-arm

    steps:
      - name: Checkout release-ops repo
        uses: actions/checkout@v4

      - name: Prepare upstream (version + dist tarball)
        id: prepare
        uses: ./.github/actions/prepare-cryptad
        with:
          version: ${{ inputs.version }}
          branch: ${{ inputs.branch }}

      - name: Prepare snap payload (repack)
        id: repack
        uses: ./.github/actions/repack-payload
        with:
          tarball_path: ${{ steps.prepare.outputs.tarball_path }}
          version: ${{ steps.prepare.outputs.version }}
          output_dir: snap/local

      - name: Prepare desktop assets (icon)
        run: |
          set -euo pipefail
          echo "::group::Prepare desktop icon"
          mkdir -p snap/gui
          if [ -f desktop/icons/cryptad.png ]; then
            cp -f desktop/icons/cryptad.png snap/gui/cryptad.png
            (ls -la snap/gui | sed 's/^/::debug::[snap-gui] /')
          else
            echo "::warning::desktop/icons/cryptad.png not found; desktop icon will be missing"
          fi
          echo "::endgroup::"

      - name: Render desktop file from shared template
        uses: ./.github/actions/render-desktop
        with:
          template_path: desktop/cryptad.desktop.template
          exec_name: snap run cryptad.cryptad-launcher
          icon_name: ${SNAP}/meta/gui/cryptad.png
          output_path: snap/gui/cryptad.desktop

      - name: Generate snapcraft.yaml from template
        uses: ./.github/actions/render-manifest
        with:
          template_path: snap/snapcraft.yaml.template
          output_path: snap/snapcraft.yaml
          substitutions: |
            __VERSION__=${{ steps.prepare.outputs.version }}
          preview_lines: "160"

      - name: Environment diag (arch + kernel)
        run: |
          echo "::debug::Host arch: $(dpkg --print-architecture || true)"
          echo "::debug::Kernel: $(uname -a)"

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v3

      - name: Build snap (native arch, no LXD)
        env:
          SNAPCRAFT_BUILD_ENVIRONMENT: host
        run: |
          echo "::group::snapcraft ${{ matrix.arch }} (pack on host)"
          sudo -E snapcraft pack --platform ${{ matrix.arch }}
          echo "::endgroup::"

      - name: List built snaps
        run: |
          echo "::group::List .snap files in workspace"
          find . -maxdepth 2 -type f -name '*.snap' -print | sed 's/^/::debug::[snap] /' || true
          echo "::endgroup::"

      - name: Upload amd64 snap
        if: matrix.arch == 'amd64'
        uses: actions/upload-artifact@v4
        with:
          name: cryptad-snap-${{ steps.prepare.outputs.version }}-amd64
          path: |
            ./*_amd64.snap
            ./snap/*_amd64.snap
          if-no-files-found: error

      - name: Upload arm64 snap
        if: matrix.arch == 'arm64'
        uses: actions/upload-artifact@v4
        with:
          name: cryptad-snap-${{ steps.prepare.outputs.version }}-arm64
          path: |
            ./*_arm64.snap
            ./snap/*_arm64.snap
          if-no-files-found: error

name: cryptad
base: core24
version: "v__VERSION__"
summary: "Privacy-first P2P encrypted datastore and app platform"
description: |
  Crypta Daemon (cryptad) is the Kotlin/Java reference node for the Crypta network,
  a modern Hyphanet/Freenet fork providing a privacy-first, censorship-resistant
  distributed datastore and application platform.

grade: stable
confinement: strict
license: GPL-3.0

platforms:
  amd64:
    build-on: [amd64]
    build-for: [amd64]
  arm64:
    build-on: [arm64]
    build-for: [arm64]

parts:
  cryptad:
    plugin: dump
    # The workflow copies the built dist tarball here with the resolved version
    source: snap/local/cryptad-v__VERSION__.tar.gz
    stage-packages:
      - openjdk-21-jre
    # Trim non-Linux and non-target-arch binaries to reduce size
    override-prime: |
      set -eux
      craftctl default
      # Ensure launchers and native wrappers are world-readable/executable
      if [ -d "$CRAFT_PRIME/bin" ]; then
        # Ensure a terminal-friendly launcher named 'cryptad-launcher' exists
        if [ ! -f "$CRAFT_PRIME/bin/cryptad-launcher" ]; then
          printf '%s\n' '#!/bin/sh' 'exec "$SNAP/bin/cryptad" "$@"' > "$CRAFT_PRIME/bin/cryptad-launcher"
        fi
        find "$CRAFT_PRIME/bin" -maxdepth 1 -type f \( -name cryptad -o -name cryptad-launcher -o -name 'wrapper*' \) -exec chmod 0755 {} + || true
      fi
      rm -f "$CRAFT_PRIME"/bin/wrapper-macosx-* || true
      rm -f "$CRAFT_PRIME"/lib/libwrapper-macosx-* || true
      # Ensure desktop entry and icon for cryptad-launcher are present under prime meta/gui for Snapcraft validation
      mkdir -p "$CRAFT_PRIME/meta/gui"
      if [ -f "$CRAFT_PROJECT_DIR/snap/gui/cryptad-launcher.desktop" ]; then
        cp -f "$CRAFT_PROJECT_DIR/snap/gui/cryptad-launcher.desktop" "$CRAFT_PRIME/meta/gui/cryptad-launcher.desktop"
      fi
      # Reuse same icon for launcher
      if [ -f "$CRAFT_PROJECT_DIR/snap/gui/cryptad.png" ]; then
        cp -f "$CRAFT_PROJECT_DIR/snap/gui/cryptad.png" "$CRAFT_PRIME/meta/gui/cryptad.png"
      fi
      case "${CRAFT_TARGET_ARCH:-}" in
        amd64)
          rm -f "$CRAFT_PRIME"/bin/wrapper-linux-arm-64 "$CRAFT_PRIME"/lib/libwrapper-linux-arm-64.so || true
          ;;
        arm64|aarch64)
          rm -f "$CRAFT_PRIME"/bin/wrapper-linux-x86-64 "$CRAFT_PRIME"/lib/libwrapper-linux-x86-64.so || true
          ;;
        *)
          true
          ;;
      esac

apps:
  cryptad:
    command: bin/cryptad
    environment:
      # The upstream launcher refuses to run as root unless this is set.
      CRYPTAD_ALLOW_ROOT: "1"
    plugs:
      - home
      - removable-media
      - network
      - network-bind

  cryptad-launcher:
    command: bin/cryptad-launcher
    desktop: meta/gui/cryptad-launcher.desktop
    stage-packages:
      - util-linux
    layout:
      /usr/bin/script:
        bind-file: $SNAP/usr/bin/script
    environment:
      CRYPTAD_ALLOW_ROOT: "1"
    plugs:
      # GUI + desktop integration for Swing
      - wayland
      - x11
      - desktop
      - desktop-legacy
      # File access and networking
      - home
      - network
      - network-bind
      # Optional: allow access to USB/SD external storage (manual connect)
      - removable-media
